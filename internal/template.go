package internal

const enumTemplate string = `
// Code generated by genum; DO NOT EDIT.
// Source: {{.Source}}
package {{.Package}}

import "fmt"

{{range .Enums}}
// === {{.TypeName}} ===

var _default{{.TypeName | title}} {{.TypeName}}

func Parse{{.TypeName}}(v {{.BaseType}}) ({{.TypeName}}, error) {
    value := {{.TypeName}}(v)
    if !value.IsValid() {
        return _default{{.TypeName | title}}, fmt.Errorf("invalid {{.TypeName}}: %v", v)
    }
    return value, nil
}

func (e {{.TypeName}}) IsValid() bool {
	switch e {
	case {{$first := index .Values 0}}{{range $i, $v := .Values}}{{if $i}},{{end}}
		{{.Name}}{{end}}:
		return true
	}
	return false
}

func (e {{.TypeName}}) Value() {{.BaseType}} {
    return {{.BaseType}}(e)
}

func (e {{.TypeName}}) Values() []{{.TypeName}} {
	return []{{.TypeName}}{
{{range .Values}}		{{.Name}},
{{end}}	}
}

func (e {{.TypeName}}) Names() []string {
	return []string{
{{range .Values}}		"{{removePrefix $.TrimPrefix .Name}}",
{{end}}	}
}
{{end}}
`
